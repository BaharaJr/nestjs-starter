var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.355,1,1.566]],["body/modules/AppModule.html",[0,2.069,1,2.766,2,1.34,3,1.34,4,1.81,5,1.81,6,1.34,7,2.459,8,1.81,9,2.159,10,2.159,11,2.394,12,0.052,13,2.459,14,1.81,15,1.81,16,0.575,17,0.575,18,0.488,19,2.69,20,2.934,21,1.108,22,1.167,23,2.69,24,2.159,25,1.549,26,1.81,27,2.69,28,2.69,29,2.69,30,1.81,31,0.575,32,0.025,33,0.026,34,0.036,35,0.026]],["title/classes/CreateTask.html",[32,0.025,36,1.355]],["body/classes/CreateTask.html",[12,0.049,16,0.635,17,0.635,18,0.539,21,0.739,31,0.635,32,0.036,33,0.029,34,0.038,35,0.029,36,1.947,37,0.982,38,3.504,39,2.386,40,0.635,41,1.947,42,2.175,43,2.937,44,1.123,45,2.011,46,2.25,47,3.866,48,1.291,49,2.973,50,2.973,51,2]],["title/classes/Item.html",[32,0.025,52,1.566]],["body/classes/Item.html",[12,0.049,16,0.541,17,0.541,18,0.46,31,0.541,32,0.024,33,0.025,34,0.034,35,0.025,37,0.837,40,0.541,41,1.748,42,2.005,44,1.31,45,2.047,48,1.506,52,2.02,53,2.034,54,4.223,55,2.317,56,4.023,57,2.005,58,4.023,59,2.533,60,3.486,61,2.533,62,2.533,63,2.533,64,2.533]],["title/classes/Items.html",[32,0.025,65,1.83]],["body/classes/Items.html",[12,0.05,16,0.73,17,0.73,18,0.62,21,0.85,31,0.73,32,0.032,33,0.033,34,0.042,35,0.033,37,1.129,48,1.129,52,2.812,60,3.43,65,2.875,66,2.743,67,3.417,68,4.272,69,3.417]],["title/classes/Task.html",[32,0.025,70,1.18]],["body/classes/Task.html",[12,0.051,16,0.512,17,0.512,18,0.434,21,0.839,31,0.512,32,0.022,33,0.023,34,0.033,35,0.023,37,0.791,40,0.512,41,1.681,42,1.945,43,2.626,44,1.218,45,2.01,46,2.44,48,1.4,55,2.248,70,1.463,71,1.922,72,2.707,73,3.903,74,1.945,75,4.76,76,2.394,77,3.903,78,2.394,79,1.694,80,2.394,81,2.394,82,3.372,83,1.379,84,1.193,85,1.193]],["title/classes/TaskRepository.html",[32,0.025,86,1.355]],["body/classes/TaskRepository.html",[12,0.051,16,0.72,17,0.72,18,0.611,21,1.053,31,0.72,32,0.031,33,0.033,34,0.041,35,0.033,37,1.113,70,1.462,72,3.399,83,1.94,86,2.11,87,2.704,88,4.631,89,4.234,90,2.267]],["title/classes/TaskStatusValidation.html",[32,0.025,91,1.566]],["body/classes/TaskStatusValidation.html",[12,0.052,16,0.445,17,0.445,18,0.378,21,0.759,22,0.904,31,0.445,32,0.019,33,0.02,34,0.03,35,0.02,37,0.688,40,0.445,41,1.52,44,1.037,48,1.192,54,2.898,57,1.52,74,1.52,79,0.904,84,1.038,85,1.038,91,1.757,92,3.19,93,1.672,94,3.051,95,3.61,96,3.61,97,2.053,98,2.898,99,3.051,100,3.051,101,1.672,102,2.429,103,2.449,104,2.449,105,2.449,106,2.083,107,3.051,108,2.083,109,2.053,110,2.053,111,2.053,112,2.083,113,3.051,114,2.083,115,2.083,116,2.083,117,2.083,118,1.672,119,1.402,120,2.083,121,2.083,122,2.053,123,3.051,124,2.083,125,1.672]],["title/controllers/TasksController.html",[126,1.566,127,1.566]],["body/controllers/TasksController.html",[12,0.054,16,0.364,17,0.364,18,0.309,21,1.062,22,0.74,30,1.148,31,0.364,32,0.016,33,0.017,34,0.026,35,0.017,36,1.595,40,0.364,44,0.49,45,1.684,46,0.982,48,0.563,55,2.07,57,0.85,70,1.56,74,1.309,79,1.139,84,0.85,85,0.85,90,1.148,91,1.512,97,1.767,109,1.148,110,1.148,111,1.148,122,2.758,126,0.982,127,1.512,128,1.369,129,1.706,130,1.148,131,2.108,132,1.369,133,2.625,134,1.706,135,2.108,136,2.625,137,1.706,138,1.706,139,1.706,140,1.706,141,1.706,142,1.706,143,1.706,144,1.139,145,1.369,146,1.369,147,1.369,148,1.309,149,1.369,150,1.706,151,1.706,152,1.706,153,1.706,154,1.706,155,1.706,156,1.706,157,1.706,158,1.706,159,1.706,160,1.706,161,1.706,162,1.706,163,1.706,164,1.706,165,1.706,166,1.706,167,1.706,168,1.706,169,1.706,170,1.706,171,1.706,172,1.706,173,1.706]],["title/classes/TasksFilterDto.html",[32,0.025,148,1.355]],["body/classes/TasksFilterDto.html",[12,0.051,16,0.591,17,0.591,18,0.502,21,0.927,31,0.591,32,0.035,33,0.027,34,0.036,35,0.027,37,0.914,40,0.591,41,1.857,44,1.071,45,1.616,46,2.145,47,2.991,48,1.231,51,1.862,74,2.099,79,1.827,84,1.379,85,1.379,104,2.221,105,2.221,148,1.857,174,2.221,175,3.381,176,2.767,177,2.767,178,2.767,179,2.767,180,2.767,181,4.211,182,2.767]],["title/modules/TasksModule.html",[0,1.355,11,1.355]],["body/modules/TasksModule.html",[0,2.039,2,1.304,3,1.304,4,1.76,5,1.76,6,1.304,7,2.753,8,1.76,11,2.374,12,0.052,13,2.413,14,1.76,15,1.76,16,0.559,17,0.559,18,0.475,20,2.1,21,1.147,22,1.135,24,2.1,25,1.507,30,2.413,31,0.559,32,0.024,33,0.026,34,0.035,35,0.026,86,1.304,127,2.356,144,2.067,145,2.1,183,2.1,184,2.1,185,2.616,186,2.616,187,2.1,188,2.616]],["title/injectables/TasksService.html",[144,1.18,189,1.566]],["body/injectables/TasksService.html",[12,0.054,16,0.261,17,0.261,18,0.221,21,0.972,22,0.529,25,0.703,31,0.261,32,0.011,33,0.012,34,0.02,35,0.012,36,1.277,40,0.261,42,1.002,43,1.353,44,0.578,45,1.534,48,0.664,55,1.892,57,1.002,70,1.756,74,1.762,79,0.872,84,0.608,85,0.608,86,1.762,90,0.821,97,1.353,98,0.98,103,0.98,109,1.353,110,1.353,111,0.821,118,1.614,119,1.353,122,2.379,130,2,131,1.614,132,2.058,135,1.614,144,0.872,146,0.98,147,0.98,148,1.002,149,0.98,175,1.614,187,0.98,189,1.158,190,1.22,191,0.98,192,2.563,193,2.01,194,1.22,195,1.22,196,1.22,197,2.01,198,2.058,199,1.22,200,1.22,201,1.22,202,2.01,203,1.22,204,2.972,205,1.22,206,1.22,207,1.22,208,2.01,209,1.22,210,1.22,211,1.22,212,3.906,213,1.22,214,1.22,215,1.22,216,1.22,217,2.01,218,1.22,219,1.22,220,1.22,221,1.22,222,2.01,223,1.22,224,1.22,225,1.22]],["title/coverage.html",[226,2.478]],["body/coverage.html",[6,1.237,12,0.051,18,0.45,26,1.67,32,0.045,33,0.024,34,0.034,35,0.024,36,1.237,38,1.992,39,1.992,44,0.713,52,1.429,53,1.992,65,1.67,66,1.992,70,1.077,71,1.992,86,1.237,87,1.992,91,1.429,92,1.992,93,1.992,119,1.67,126,1.429,127,1.429,128,1.992,144,1.077,148,1.237,174,1.992,189,1.429,191,1.992,226,1.67,227,2.481,228,2.481,229,2.481,230,5.098,231,2.481,232,4.303,233,1.992,234,2.481,235,1.992,236,1.992,237,2.481,238,3.979,239,2.481,240,2.481,241,2.481,242,2.481,243,2.481]],["title/dependencies.html",[3,1.626,244,2.286]],["body/dependencies.html",[3,1.5,12,0.053,22,1.306,25,1.733,32,0.037,33,0.029,34,0.039,35,0.029,51,2.025,83,1.733,198,2.416,245,4.391,246,3.01,247,3.01,248,3.01,249,3.01,250,3.01,251,3.01,252,3.01,253,3.01,254,3.01,255,3.01,256,3.01,257,3.01,258,3.01,259,3.01,260,3.01,261,3.01,262,3.01,263,3.01,264,3.01,265,3.01]],["title/miscellaneous/enumerations.html",[266,0.992,267,2.619]],["body/miscellaneous/enumerations.html",[12,0.05,33,0.034,34,0.043,35,0.034,40,0.751,79,1.887,102,3.177,266,1.526,267,2.823,268,3.517,269,4.349,270,3.517,271,4.349,272,4.349,273,4.349]],["title/miscellaneous/functions.html",[266,0.992,274,2.619]],["body/miscellaneous/functions.html",[6,2.458,12,0.045,33,0.038,34,0.045,35,0.038,40,0.83,233,3.12,266,1.687,274,3.12,275,3.887]],["title/index.html",[40,0.488,276,2.286,277,2.286]],["body/index.html",[12,0.051,33,0.024,34,0.034,35,0.024,42,1.23,83,1.421,226,1.661,278,3.445,279,2.468,280,2.468,281,2.468,282,2.468,283,2.468,284,2.468,285,2.468,286,2.468,287,2.468,288,2.468,289,2.468,290,4.801,291,2.468,292,2.468,293,1.982,294,4.678,295,2.468,296,2.468,297,3.445,298,2.468,299,2.468,300,2.468,301,2.468,302,3.445,303,3.445,304,2.468,305,2.468,306,2.468,307,2.468,308,3.445,309,2.468,310,2.468,311,2.468,312,2.468,313,2.468,314,2.468,315,2.468,316,2.468,317,2.468,318,2.468,319,2.468,320,2.468,321,2.468,322,2.468,323,2.468,324,2.468]],["title/modules.html",[2,1.835]],["body/modules.html",[1,2.185,2,1.891,11,1.891,12,0.045,33,0.037,34,0.045,35,0.037,325,4.556,326,4.556,327,4.556,328,4.556]],["title/overview.html",[329,2.956]],["body/overview.html",[0,1.559,1,2.722,2,1.559,3,1.559,4,2.104,5,2.104,6,1.559,7,2.104,8,2.104,9,2.511,10,2.511,11,2.439,12,0.046,13,2.717,14,2.104,15,2.104,33,0.031,34,0.039,35,0.031,37,1.033,125,3.242,126,1.801,144,1.941,183,2.511,184,2.511,189,1.801,329,2.511,330,3.127,331,3.127]],["title/miscellaneous/variables.html",[266,0.992,332,2.619]],["body/miscellaneous/variables.html",[12,0.049,26,2.662,33,0.03,34,0.039,35,0.03,40,0.647,44,1.137,57,1.51,101,2.431,102,2.038,130,2.038,235,2.431,236,3.175,266,1.314,293,2.431,332,2.431,333,3.029,334,3.029,335,4.404,336,3.029,337,3.029,338,3.029,339,3.029,340,3.029,341,3.029,342,3.029,343,3.029,344,3.955,345,3.029,346,3.029,347,3.029,348,3.029,349,3.029,350,3.029,351,3.029,352,3.029,353,3.029]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["0.0.2",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":125,"title":{},"body":{"classes/TaskStatusValidation.html":{},"overview.html":{}}}],["2",{"_index":330,"title":{},"body":{"overview.html":{}}}],["2.0.2",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["3.0.0",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.3.3",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":331,"title":{},"body":{"overview.html":{}}}],["7.18.2",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["allowedstatus",{"_index":96,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["anyone",{"_index":285,"title":{},"body":{"index.html":{}}}],["api(on",{"_index":320,"title":{},"body":{"index.html":{}}}],["app",{"_index":292,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":192,"title":{},"body":{"injectables/TasksService.html":{}}}],["await",{"_index":213,"title":{},"body":{"injectables/TasksService.html":{}}}],["badrequestexception",{"_index":115,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["badrequestexception(`${value",{"_index":120,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["baseentity",{"_index":73,"title":{},"body":{"classes/Task.html":{}}}],["body",{"_index":137,"title":{},"body":{"controllers/TasksController.html":{}}}],["body('status",{"_index":172,"title":{},"body":{"controllers/TasksController.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":308,"title":{},"body":{"index.html":{}}}],["browse",{"_index":328,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":325,"title":{},"body":{"modules.html":{}}}],["built",{"_index":287,"title":{},"body":{"index.html":{}}}],["class",{"_index":32,"title":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"classes/TasksFilterDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"classes/TasksFilterDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":183,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":184,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["column",{"_index":75,"title":{},"body":{"classes/Task.html":{}}}],["completion)license",{"_index":321,"title":{},"body":{"index.html":{}}}],["config",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["config.ts",{"_index":236,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log(createtask",{"_index":164,"title":{},"body":{"controllers/TasksController.html":{}}}],["const",{"_index":204,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor",{"_index":193,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(private",{"_index":153,"title":{},"body":{"controllers/TasksController.html":{}}}],["constructor(taskrepository",{"_index":194,"title":{},"body":{"injectables/TasksService.html":{}}}],["contains",{"_index":317,"title":{},"body":{"index.html":{}}}],["controller",{"_index":126,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('tasks",{"_index":152,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllers",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["coverage",{"_index":226,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtask",{"_index":36,"title":{"classes/CreateTask.html":{}},"body":{"classes/CreateTask.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["createtask(@body",{"_index":163,"title":{},"body":{"controllers/TasksController.html":{}}}],["createtasks(createtask",{"_index":218,"title":{},"body":{"injectables/TasksService.html":{}}}],["database",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":46,"title":{},"body":{"classes/CreateTask.html":{},"classes/Task.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{}}}],["default",{"_index":101,"title":{},"body":{"classes/TaskStatusValidation.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":48,"title":{},"body":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{}}}],["delete",{"_index":139,"title":{},"body":{"controllers/TasksController.html":{}}}],["delete('/:id",{"_index":166,"title":{},"body":{"controllers/TasksController.html":{}}}],["deleteonetask(@param('id",{"_index":167,"title":{},"body":{"controllers/TasksController.html":{}}}],["deleteonetask(id",{"_index":220,"title":{},"body":{"injectables/TasksService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":315,"title":{},"body":{"index.html":{}}}],["description",{"_index":42,"title":{},"body":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["descriptions",{"_index":307,"title":{},"body":{"index.html":{}}}],["development",{"_index":293,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dropschema",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/create",{"_index":146,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dto/tasksfilter.dto",{"_index":149,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["e2e",{"_index":304,"title":{},"body":{"index.html":{}}}],["easier",{"_index":312,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":283,"title":{},"body":{"index.html":{}}}],["entities",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":82,"title":{},"body":{"classes/Task.html":{}}}],["entityrepository",{"_index":89,"title":{},"body":{"classes/TaskRepository.html":{}}}],["enum",{"_index":85,"title":{},"body":{"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{}}}],["enum.ts",{"_index":269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":267,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["express",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":72,"title":{},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{}}}],["false",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["filtertask",{"_index":156,"title":{},"body":{"controllers/TasksController.html":{}}}],["found",{"_index":212,"title":{},"body":{"injectables/TasksService.html":{}}}],["found.id",{"_index":224,"title":{},"body":{"injectables/TasksService.html":{}}}],["full",{"_index":319,"title":{},"body":{"index.html":{}}}],["function",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":274,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":133,"title":{},"body":{"controllers/TasksController.html":{}}}],["getalltasks",{"_index":201,"title":{},"body":{"injectables/TasksService.html":{}}}],["getfilteredtask(tasksfilter",{"_index":203,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskbyid",{"_index":131,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(@param('id",{"_index":160,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskbyid(id",{"_index":132,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettasks(@query(validationpipe",{"_index":155,"title":{},"body":{"controllers/TasksController.html":{}}}],["getting",{"_index":276,"title":{"index.html":{}},"body":{}}],["host",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":55,"title":{},"body":{"classes/Item.html":{},"classes/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["idxof",{"_index":123,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["image",{"_index":56,"title":{},"body":{"classes/Item.html":{}}}],["implemented",{"_index":282,"title":{},"body":{"index.html":{}}}],["implements",{"_index":94,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["in_progress",{"_index":272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":67,"title":{},"body":{"classes/Items.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["injectable",{"_index":189,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":190,"title":{},"body":{"injectables/TasksService.html":{}}}],["injectrepository",{"_index":199,"title":{},"body":{"injectables/TasksService.html":{}}}],["injectrepository(taskrepository",{"_index":200,"title":{},"body":{"injectables/TasksService.html":{}}}],["installation",{"_index":289,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":291,"title":{},"body":{"index.html":{}}}],["isin",{"_index":180,"title":{},"body":{"classes/TasksFilterDto.html":{}}}],["isin([taskstatus.done",{"_index":182,"title":{},"body":{"classes/TasksFilterDto.html":{}}}],["isnotempty",{"_index":47,"title":{},"body":{"classes/CreateTask.html":{},"classes/TasksFilterDto.html":{}}}],["isnotempty()@isoptional",{"_index":176,"title":{},"body":{"classes/TasksFilterDto.html":{}}}],["isoptional",{"_index":181,"title":{},"body":{"classes/TasksFilterDto.html":{}}}],["isoptional()@isin(undefined",{"_index":178,"title":{},"body":{"classes/TasksFilterDto.html":{}}}],["isstatusvalid",{"_index":99,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["isstatusvalid(status",{"_index":107,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["it's",{"_index":313,"title":{},"body":{"index.html":{}}}],["item",{"_index":52,"title":{"classes/Item.html":{}},"body":{"classes/Item.html":{},"classes/Items.html":{},"coverage.html":{}}}],["items",{"_index":65,"title":{"classes/Items.html":{}},"body":{"classes/Items.html":{},"coverage.html":{}}}],["key",{"_index":68,"title":{},"body":{"classes/Items.html":{}}}],["learning",{"_index":311,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["licensed",{"_index":324,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":310,"title":{},"body":{"index.html":{}}}],["master",{"_index":316,"title":{},"body":{"index.html":{}}}],["matching",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":97,"title":{},"body":{"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["migrations",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimalist",{"_index":284,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":266,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":323,"title":{},"body":{"index.html":{}}}],["mode",{"_index":297,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":57,"title":{},"body":{"classes/Item.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":322,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":278,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["new",{"_index":119,"title":{},"body":{"classes/TaskStatusValidation.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["nodemon",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":197,"title":{},"body":{"injectables/TasksService.html":{}}}],["notfoundexception(`task",{"_index":215,"title":{},"body":{"injectables/TasksService.html":{}}}],["npm",{"_index":290,"title":{},"body":{"index.html":{}}}],["number",{"_index":60,"title":{},"body":{"classes/Item.html":{},"classes/Items.html":{}}}],["object.keys(filtertask).length",{"_index":157,"title":{},"body":{"controllers/TasksController.html":{}}}],["open",{"_index":271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["overview",{"_index":329,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":244,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":138,"title":{},"body":{"controllers/TasksController.html":{}}}],["param('id",{"_index":171,"title":{},"body":{"controllers/TasksController.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["password",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":140,"title":{},"body":{"controllers/TasksController.html":{}}}],["patch('/:id/status",{"_index":169,"title":{},"body":{"controllers/TasksController.html":{}}}],["pg",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["pipes/task",{"_index":150,"title":{},"body":{"controllers/TasksController.html":{}}}],["pipetransform",{"_index":95,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["port",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":136,"title":{},"body":{"controllers/TasksController.html":{}}}],["postgres",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":288,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":129,"title":{},"body":{"controllers/TasksController.html":{}}}],["price",{"_index":58,"title":{},"body":{"classes/Item.html":{}}}],["primarygeneratedcolumn",{"_index":77,"title":{},"body":{"classes/Task.html":{}}}],["private",{"_index":98,"title":{},"body":{"classes/TaskStatusValidation.html":{},"injectables/TasksService.html":{}}}],["production",{"_index":299,"title":{},"body":{"index.html":{}}}],["project",{"_index":281,"title":{},"body":{"index.html":{}}}],["promise",{"_index":135,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["properties",{"_index":41,"title":{},"body":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"classes/TasksFilterDto.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["query",{"_index":141,"title":{},"body":{"controllers/TasksController.html":{}}}],["readonly",{"_index":54,"title":{},"body":{"classes/Item.html":{},"classes/TaskStatusValidation.html":{}}}],["recent",{"_index":318,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":88,"title":{},"body":{"classes/TaskRepository.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["result",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":122,"title":{},"body":{"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["returns",{"_index":111,"title":{},"body":{"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["rimraf",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":294,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":175,"title":{},"body":{"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{}}}],["self",{"_index":314,"title":{},"body":{"index.html":{}}}],["simpler",{"_index":279,"title":{},"body":{"index.html":{}}}],["simplified",{"_index":309,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Items.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["src/.../main.ts",{"_index":275,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.status",{"_index":268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typeorm",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/database/migration/**/*.ts",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/item.ts",{"_index":53,"title":{},"body":{"classes/Item.html":{},"coverage.html":{}}}],["src/item.ts:2",{"_index":61,"title":{},"body":{"classes/Item.html":{}}}],["src/item.ts:3",{"_index":63,"title":{},"body":{"classes/Item.html":{}}}],["src/item.ts:4",{"_index":64,"title":{},"body":{"classes/Item.html":{}}}],["src/item.ts:5",{"_index":59,"title":{},"body":{"classes/Item.html":{}}}],["src/item.ts:6",{"_index":62,"title":{},"body":{"classes/Item.html":{}}}],["src/items.ts",{"_index":66,"title":{},"body":{"classes/Items.html":{},"coverage.html":{}}}],["src/items.ts:2",{"_index":69,"title":{},"body":{"classes/Items.html":{}}}],["src/main.ts",{"_index":233,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/subscriber/**/*.ts",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/tasks/**/*.entity.ts",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/tasks/config/typeorm",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/dto/create",{"_index":38,"title":{},"body":{"classes/CreateTask.html":{},"coverage.html":{}}}],["src/tasks/dto/tasksfilter.dto.ts",{"_index":174,"title":{},"body":{"classes/TasksFilterDto.html":{},"coverage.html":{}}}],["src/tasks/dto/tasksfilter.dto.ts:11",{"_index":177,"title":{},"body":{"classes/TasksFilterDto.html":{}}}],["src/tasks/dto/tasksfilter.dto.ts:7",{"_index":179,"title":{},"body":{"classes/TasksFilterDto.html":{}}}],["src/tasks/pipes/task",{"_index":92,"title":{},"body":{"classes/TaskStatusValidation.html":{},"coverage.html":{}}}],["src/tasks/task.entity.ts",{"_index":71,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/tasks/task.entity.ts:10",{"_index":81,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.entity.ts:13",{"_index":76,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.entity.ts:16",{"_index":80,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.entity.ts:7",{"_index":78,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/task.repository.ts",{"_index":87,"title":{},"body":{"classes/TaskRepository.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":128,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:31",{"_index":134,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":185,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":191,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:11",{"_index":195,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:37",{"_index":196,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.status",{"_index":270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":295,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":298,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":300,"title":{},"body":{"index.html":{}}}],["started",{"_index":277,"title":{"index.html":{}},"body":{}}],["starter",{"_index":280,"title":{},"body":{"index.html":{}}}],["statements",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":74,"title":{},"body":{"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{}}}],["status.validation.pipe",{"_index":151,"title":{},"body":{"controllers/TasksController.html":{}}}],["status.validation.pipe.ts",{"_index":93,"title":{},"body":{"classes/TaskStatusValidation.html":{},"coverage.html":{}}}],["status.validation.pipe.ts:11",{"_index":114,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["status.validation.pipe.ts:19",{"_index":108,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["status.validation.pipe.ts:5",{"_index":106,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["string",{"_index":45,"title":{},"body":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Task.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{}}}],["subscribers",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":326,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":327,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":70,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["task.description.includes(search",{"_index":211,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.dto",{"_index":147,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.dto.ts",{"_index":39,"title":{},"body":{"classes/CreateTask.html":{},"coverage.html":{}}}],["task.dto.ts:4",{"_index":50,"title":{},"body":{"classes/CreateTask.html":{}}}],["task.dto.ts:7",{"_index":49,"title":{},"body":{"classes/CreateTask.html":{}}}],["task.entity",{"_index":90,"title":{},"body":{"classes/TaskRepository.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.id",{"_index":217,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.repository",{"_index":187,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["task.status",{"_index":208,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.title.includes(search",{"_index":210,"title":{},"body":{"injectables/TasksService.html":{}}}],["taskrepository",{"_index":86,"title":{"classes/TaskRepository.html":{}},"body":{"classes/TaskRepository.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasks",{"_index":130,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["tasks.controller",{"_index":186,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.filter",{"_index":209,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.filter(task",{"_index":207,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.service",{"_index":145,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks.status",{"_index":84,"title":{},"body":{"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{}}}],["tasks/config/typeorm",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks/tasks.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":127,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["taskservice",{"_index":154,"title":{},"body":{"controllers/TasksController.html":{}}}],["tasksfilter",{"_index":205,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasksfilterdto",{"_index":148,"title":{"classes/TasksFilterDto.html":{}},"body":{"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":11,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":144,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["taskstatus",{"_index":79,"title":{},"body":{"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.done",{"_index":103,"title":{},"body":{"classes/TaskStatusValidation.html":{},"injectables/TasksService.html":{}}}],["taskstatus.in_progress",{"_index":104,"title":{},"body":{"classes/TaskStatusValidation.html":{},"classes/TasksFilterDto.html":{}}}],["taskstatus.open",{"_index":105,"title":{},"body":{"classes/TaskStatusValidation.html":{},"classes/TasksFilterDto.html":{}}}],["taskstatusvalidation",{"_index":91,"title":{"classes/TaskStatusValidation.html":{}},"body":{"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["test",{"_index":303,"title":{},"body":{"index.html":{}}}],["test:covbranch",{"_index":306,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":305,"title":{},"body":{"index.html":{}}}],["tests",{"_index":302,"title":{},"body":{"index.html":{}}}],["this.allowedstatus.indexof(status",{"_index":124,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["this.getalltasks",{"_index":206,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.gettaskbyid(id",{"_index":222,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.isstatusvalid(value",{"_index":117,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["this.taskrepository.findone(id",{"_index":214,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks",{"_index":202,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.filter(task",{"_index":223,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.find(task",{"_index":216,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":219,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.taskservice.createtasks(createtask",{"_index":165,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.deleteonetask(id",{"_index":168,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.getalltasks",{"_index":159,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.getfilteredtask(filtertask",{"_index":158,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.gettaskbyid(id",{"_index":161,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.taskservice.updatetaskstatus(id",{"_index":173,"title":{},"body":{"controllers/TasksController.html":{}}}],["throw",{"_index":118,"title":{},"body":{"classes/TaskStatusValidation.html":{},"injectables/TasksService.html":{}}}],["title",{"_index":43,"title":{},"body":{"classes/CreateTask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["transform",{"_index":100,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["transform(value",{"_index":113,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["transformer",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":44,"title":{},"body":{"classes/CreateTask.html":{},"classes/Item.html":{},"classes/Task.html":{},"classes/TaskStatusValidation.html":{},"controllers/TasksController.html":{},"classes/TasksFilterDto.html":{},"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":83,"title":{},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{},"dependencies.html":{},"index.html":{}}}],["typeormconfig",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([taskrepository",{"_index":188,"title":{},"body":{"modules/TasksModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uid",{"_index":198,"title":{},"body":{"injectables/TasksService.html":{},"dependencies.html":{}}}],["understand",{"_index":286,"title":{},"body":{"index.html":{}}}],["unit",{"_index":301,"title":{},"body":{"index.html":{}}}],["updatetaskstatus",{"_index":170,"title":{},"body":{"controllers/TasksController.html":{}}}],["updatetaskstatus(id",{"_index":225,"title":{},"body":{"injectables/TasksService.html":{}}}],["usepipes",{"_index":142,"title":{},"body":{"controllers/TasksController.html":{}}}],["usepipes(validationpipe",{"_index":162,"title":{},"body":{"controllers/TasksController.html":{}}}],["username",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":121,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["validationpipe",{"_index":143,"title":{},"body":{"controllers/TasksController.html":{}}}],["validator",{"_index":51,"title":{},"body":{"classes/CreateTask.html":{},"classes/TasksFilterDto.html":{},"dependencies.html":{}}}],["value",{"_index":102,"title":{},"body":{"classes/TaskStatusValidation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":116,"title":{},"body":{"classes/TaskStatusValidation.html":{}}}],["variable",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":332,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":221,"title":{},"body":{"injectables/TasksService.html":{}}}],["watch",{"_index":296,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksModule } from './tasks/tasks.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeormConfig } from './tasks/config/typeorm-config';\n\n@Module({\n  imports: [TasksModule, TypeOrmModule.forRoot(typeormConfig)],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTask.html":{"url":"classes/CreateTask.html","title":"class - CreateTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-task.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsNotEmpty} from 'class-validator'\nexport class CreateTask{\n@IsNotEmpty()\ntitle: string;\n\n@IsNotEmpty()\ndescription: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Item.html":{"url":"classes/Item.html","title":"class - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Item\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/item.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/item.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/item.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/item.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/item.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/item.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Item {\n    readonly id: number;\n    readonly name: string;\n    readonly price: number;\n    readonly description: string;\n    readonly image: string;\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Items.html":{"url":"classes/Items.html","title":"class - Items","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Items\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: number]:        Item\n\n                    \n                \n                        \n                            \n                                Defined in src/items.ts:2\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Item } from './item';\nexport class Items {\n  \n    [key: number]: Item;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/task.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, PrimaryGeneratedColumn, Column, Entity } from 'typeorm';\nimport { TaskStatus } from './tasks.status-enum';\n\n@Entity()\nexport class Task extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @Column()\n  title: string;\n\n  @Column()\n  description: string;\n\n  @Column()\n  status: TaskStatus;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskRepository.html":{"url":"classes/TaskRepository.html","title":"class - TaskRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/task.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Repository, EntityRepository } from \"typeorm\";\nimport { Task } from \"./task.entity\";\n\n@EntityRepository()\nexport class TaskRepository extends Repository {\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusValidation.html":{"url":"classes/TaskStatusValidation.html","title":"class - TaskStatusValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/pipes/task-status.validation.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isStatusValid\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            allowedStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    TaskStatus.DONE,\n    TaskStatus.IN_PROGRESS,\n    TaskStatus.OPEN,\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/pipes/task-status.validation.pipe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isStatusValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isStatusValid(status: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status.validation.pipe.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status.validation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, BadRequestException } from '@nestjs/common';\nimport { TaskStatus } from '../tasks.status-enum';\n\nexport class TaskStatusValidation implements PipeTransform {\n  readonly allowedStatus = [\n    TaskStatus.DONE,\n    TaskStatus.IN_PROGRESS,\n    TaskStatus.OPEN,\n  ];\n\n  transform(value: any) {\n    value.toUpperCase();\n    if (!this.isStatusValid(value)) {\n      throw new BadRequestException(`${value} is not a valid status`);\n    }\n    return value;\n  }\n\n  private isStatusValid(status: any) {\n    let idxOf = this.allowedStatus.indexOf(status);\n    return idxOf !== -1;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Patch,\n  Query,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { TaskStatus } from './tasks.status-enum';\nimport { CreateTask } from './dto/create-task.dto';\nimport { TasksFilterDto } from './dto/tasksfilter.dto';\nimport { TaskStatusValidation } from './pipes/task-status.validation.pipe';\nimport { Task } from './task.entity';\n\n@Controller('tasks')\nexport class TasksController {\n  constructor(private taskService: TasksService) {}\n  // @Get()\n  // getTasks(@Query(ValidationPipe) filterTask: TasksFilterDto): Task[] {\n  //   if (Object.keys(filterTask).length) {\n  //     return this.taskService.getFilteredTask(filterTask);\n  //   } else return this.taskService.getAllTasks();\n  // }\n\n  @Get('/:id')\n   getTaskById(@Param('id') id: string): Promise {\n    return this.taskService.getTaskById(id);\n  }\n\n  // @Post()\n  // @UsePipes(ValidationPipe)\n  // createTask(@Body() createTask: CreateTask): Task {\n  //   console.log(createTask);\n  //   return this.taskService.createTasks(createTask);\n  // }\n\n  // @Delete('/:id')\n  // deleteOneTask(@Param('id') id: string) {\n  //   return this.taskService.deleteOneTask(id);\n  // }\n\n  // @Patch('/:id/status')\n  // updateTaskStatus(\n  //   @Param('id') id: string,\n  //   @Body('status', TaskStatusValidation) status: TaskStatus,\n  // ): Task {\n  //   return this.taskService.updateTaskStatus(id, status);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksFilterDto.html":{"url":"classes/TasksFilterDto.html","title":"class - TasksFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/tasksfilter.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/tasksfilter.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/tasksfilter.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskStatus } from '../tasks.status-enum';\nimport { IsNotEmpty, IsIn, IsOptional } from 'class-validator';\n\nexport class TasksFilterDto {\n  @IsOptional()\n  @IsIn([TaskStatus.DONE, TaskStatus.IN_PROGRESS, TaskStatus.OPEN])\n  status: TaskStatus;\n\n  @IsNotEmpty()\n  @IsOptional()\n  search: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TaskRepository } from './task.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TaskRepository])],\n  controllers: [TasksController],\n  providers: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepository: TaskRepository)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepository\n                                                  \n                                                        \n                                                                        TaskRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { TaskStatus } from './tasks.status-enum';\nimport * as uid from 'uid';\nimport { CreateTask } from './dto/create-task.dto';\nimport { TasksFilterDto } from './dto/tasksfilter.dto';\nimport { TaskRepository } from './task.repository';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Task } from './task.entity';\n\n@Injectable()\nexport class TasksService {\n  constructor(\n    @InjectRepository(TaskRepository)\n    private taskRepository: TaskRepository,\n  ) {}\n\n  // getAllTasks() {\n  //   return this.tasks;\n  // }\n\n  // getFilteredTask(tasksfilter: TasksFilterDto) {\n  //   const { status, search } = tasksfilter;\n  //   let tasks = this.getAllTasks();\n\n  //   if (status) {\n  //     tasks = tasks.filter(task => task.status === status);\n  //   }\n  //   if (search) {\n  //     tasks = tasks.filter(\n  //       task =>\n  //         task.title.includes(search) || task.description.includes(search),\n  //     );\n  //   }\n\n  //   return tasks;\n  // }\n  async getTaskById(id: string): Promise {\n    let found = await this.taskRepository.findOne(id);\n    if (!found) {\n      throw new NotFoundException(`Task with ID ${id} not found`);\n    } else return found;\n  }\n  // getTaskById(id: string): Task {\n  //   const found = this.tasks.find(task => task.id === id);\n  //   if (!found) {\n  //     throw new NotFoundException();\n  //   } else return found;\n  // }\n\n  // createTasks(createTask: CreateTask) {\n  //   const { title, description } = createTask;\n  //   const task: Task = {\n  //     id: uid(),\n  //     title,\n  //     description,\n  //     status: TaskStatus.DONE,\n  //   };\n\n  //   this.tasks.push(task);\n  //   return task;\n  // }\n\n  // deleteOneTask(id: string): void {\n  //   let found = this.getTaskById(id);\n  //   this.tasks = this.tasks.filter(task => task.id !== found.id);\n  // }\n\n  // updateTaskStatus(id: string, status: TaskStatus): Task {\n  //   let task = this.getTaskById(id);\n  //   task.status = status;\n  //   return task;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/item.ts\n            \n            class\n            Item\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/items.ts\n            \n            class\n            Items\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/config/typeorm-config.ts\n            \n            variable\n            typeormConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-task.dto.ts\n            \n            class\n            CreateTask\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/dto/tasksfilter.dto.ts\n            \n            class\n            TasksFilterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/pipes/task-status.validation.pipe.ts\n            \n            class\n            TaskStatusValidation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/task.repository.ts\n            \n            class\n            TaskRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/typeorm : ^6.3.3\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            nodemon : ^2.0.2\n        \n            pg : ^7.18.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            typeorm : ^0.2.22\n        \n            uid : 0.0.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../tasks.status-enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/tasks.status-enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : OPEN\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n                        \n                            \n                                Value : DONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\nDescription\nA nestjs simpler starter project with implemented endpoints so minimalist for anyone to understand\nBuilt with Nestjs, Typeorm and Postgresql\n\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covBranch Descriptions\n\nEvery branch is simplified to make the learning easier and it's self described\n\nThe master branch contains the most recent or full api(On Completion)License\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            typeormConfig   (src/.../typeorm-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/config/typeorm-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            typeormConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  name: 'development',\n  type: 'postgres',\n  host: 'localhost',\n  port: 5432,\n  username: 'postgres',\n  password: 'postgres',\n  database: 'tasks',\n  synchronize: true,\n  logging: false,\n  dropSchema: true,\n  entities: ['src/tasks/**/*.entity.ts'],\n  migrations: ['src/database/migration/**/*.ts'],\n  subscribers: ['src/subscriber/**/*.ts'],\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
